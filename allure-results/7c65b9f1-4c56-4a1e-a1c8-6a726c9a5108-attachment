# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Network interception
- Location: C:\Users\DELL\Desktop\POM_Feb\tests\ni.spec.ts:3:5

# Error details

```
Error: Playwright Test did not expect test() to be called here.
Most common reasons include:
- You are calling test() in a configuration file.
- You are calling test() in a file that is imported by the configuration file.
- You have two different versions of @playwright/test. This usually happens
  when one of the dependencies in your package.json depends on @playwright/test.
    at C:\Users\DELL\Desktop\POM_Feb\tests\ni.spec.ts:5:5
```

# Test source

```ts
   1 | import test, { expect } from "@playwright/test";
   2 |
   3 | test(`Network interception`,async({page})=>{
   4 |   
>  5 | test('Mock login API in UIBank', async ({ page }) => {
     |     ^ Error: Playwright Test did not expect test() to be called here.
   6 |     // 1. Intercept the login API request
   7 |     await page.route('**/api/users/login', async route => {
   8 |       console.log('Intercepted /api/users/login');
   9 |   
  10 |       // 2. Send a mocked response
  11 |       await route.fulfill({
  12 |         status: 200,
  13 |         contentType: 'application/json',
  14 |         body: JSON.stringify({
  15 |           userId: 'mock-user-123',
  16 |           firstName: 'Mocky',
  17 |           lastName: 'User',
  18 |           token: 'mock-token-value'
  19 |         })
  20 |       });
  21 |     });
  22 |   
  23 |     // 3. Load the app and trigger login
  24 |     await page.goto('https://uibank.uipath.com');
  25 |     await page.fill('input[name="username"]', 'FebApiuser');
  26 |     await page.fill('input[name="password"]', 'Eagle@123');
  27 |     await page.click('button:has-text("Sign In")');
  28 |   
  29 |     // 4. Optional assertion (if app displays first name or similar)
  30 |     await expect(page.locator('text=Mocky')).toBeVisible();
  31 |   });
  32 |   
  33 | })
```