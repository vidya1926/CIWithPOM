# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Mock login API in UIBank
- Location: C:\Users\DELL\Desktop\POM_Feb\tests\ni.spec.ts:4:5

# Error details

```
Error: Timed out 5000ms waiting for expect(locator).toBeVisible()

Locator: locator('text=Mocky')
Expected: visible
Received: <element(s) not found>
Call log:
  - expect.toBeVisible with timeout 5000ms
  - waiting for locator('text=Mocky')

    at C:\Users\DELL\Desktop\POM_Feb\tests\ni.spec.ts:29:46
```

# Test source

```ts
   1 | import test, { expect } from "@playwright/test";
   2 |
   3 |   
   4 | test('Mock login API in UIBank', async ({ page }) => {
   5 |     // 1. Intercept the login API request
   6 |     await page.route('**/api/users/login', async route => {
   7 |       console.log('Intercepted /api/users/login');
   8 |   
   9 |       // 2. Send a mocked response
  10 |       await route.fulfill({
  11 |         status: 200,
  12 |         contentType: 'application/json',
  13 |         body: JSON.stringify({
  14 |           userId: 'mock-user-123',
  15 |           firstName: 'Mocky',
  16 |           lastName: 'User',
  17 |           token: 'mock-token-value'
  18 |         })
  19 |       });
  20 |     });
  21 |   
  22 |     // 3. Load the app and trigger login
  23 |     await page.goto('https://uibank.uipath.com');
  24 |     await page.fill('input[name="username"]', 'FebApiuser');
  25 |     await page.fill('input[name="password"]', 'Eagle@123');
  26 |     await page.click('button:has-text("Sign In")');
  27 |   
  28 |     // 4. Optional assertion (if app displays first name or similar)
> 29 |     await expect(page.locator('text=Mocky')).toBeVisible();
     |                                              ^ Error: Timed out 5000ms waiting for expect(locator).toBeVisible()
  30 |   });
  31 |   
  32 |
```